#!/usr/bin/env gawk -f
@include "transforms/records";

#batch separators every N records, just a comment marker
#this is used as a split point piping along to parallel
NR%100==0 {
  print "//BATCH";
}


#all jobs
{
  escape();
  startDate = employmentDate($6, $7)
  endDate = employmentDate($8, $9)
  #just the job itself
  print "db.people.update("
  printf "{ hashkey: 'person-%s'}, ", $1
  printf "{$set: {'jobs.%s': {nameOfCompany: '%s', companyId: '%s', jobTitle: '%s', startDate: '%s', endDate: '%s', isCurrent: %i, TaxonomySector: '%s'} } },\n", $2, $3, $4, $5, startDate, endDate, $10, $11
  printf "{upsert: true }\n"
  print ");"

  if ($11) {
    #separate taxonomy sets
    print "db.people.update("
    printf "{ hashkey: 'person-%s'}, ", $1
    printf "{ $addToSet: {taxonomySector: '%s'} },\n", $11
    printf "{ upsert: true }\n"
    print ");\n"
  }
  if (length($11))
    facetize($1, $11, "taxonomySector_All_Facet")
  if (length($12))
    facetize($1, $12, "taxonomyJobFunction_All_Facet")

  print "db.people.update("
  printf "{ hashkey: 'person-%s'}, ", $1
  printf "{ $addToSet: {company_All_Bucket: '%s'} },\n", $3
  printf "{ upsert: true }\n"
  print ");\n"
}

#current jobs
$10 == "1" {
  if (length($11))
    facetize($1, $11, "taxonomySector_AllCurrent_Facet")
  if (length($12))
    facetize($1, $12, "taxonomyJobFunction_AllCurrent_Facet")


  print "db.people.update("
  printf "{ hashkey: 'person-%s'}, ", $1
  printf "{ $addToSet: {company_AllCurrent_Bucket: '%s'} },\n", $3
  printf "{ upsert: true }\n"
  print ");\n"
}

#former jobs
$10 == "0" {
  if (length($11))
    facetize($1, $11, "taxonomySector_AllFormer_Facet")
  if (length($12))
    facetize($1, $12, "taxonomyJobFunction_AllFormer_Facet")

  print "db.people.update("
  printf "{ hashkey: 'person-%s'}, ", $1
  printf "{ $addToSet: {company_AllFormer_Bucket: '%s'} },\n", $3
  printf "{ upsert: true }\n"
  print ");\n"
}

$13 > 0 && $13 < 180 {
  print "db.people.update("
  printf "{ hashkey: 'person-%s'}, ", $1
  printf "{ $addToSet: {company_0_6_Former_Bucket: '%s'} },\n", $3
  printf "{ upsert: true }\n"
  print ");\n"
}

$13 >= 180 && $13 < 365 {
  print "db.people.update("
  printf "{ hashkey: 'person-%s'}, ", $1
  printf "{ $addToSet: {company_6_1_Former_Bucket: '%s'} },\n", $3
  printf "{ upsert: true }\n"
  print ");\n"
}

$13 >= 365 && $13 < (365*2) {
  print "db.people.update("
  printf "{ hashkey: 'person-%s'}, ", $1
  printf "{ $addToSet: {company_1_2_Former_Bucket: '%s'} },\n", $3
  printf "{ upsert: true }\n"
  print ");\n"
}

$13 >= (365*2) && $13 < (365*4) {
  print "db.people.update("
  printf "{ hashkey: 'person-%s'}, ", $1
  printf "{ $addToSet: {company_2_4_Former_Bucket: '%s'} },\n", $3
  printf "{ upsert: true }\n"
  print ");\n"
}

$13 >= (365*4) {
  print $13, 365*4
  print "db.people.update("
  printf "{ hashkey: 'person-%s'}, ", $1
  printf "{ $addToSet: {company_4_Former_Bucket: '%s'} },\n", $3
  printf "{ upsert: true }\n"
  print ");\n"
}
