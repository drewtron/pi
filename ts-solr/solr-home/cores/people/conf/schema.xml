<?xml version="1.0" encoding="UTF-8" ?>

<!--
Template for schema.xml. Two areas are filled in:
   = the schema name
   = the field definitions
-->

<schema name="people" version="1.4">

  <fields>

    <field name="id" type="string" indexed="true" stored="true" required="true"/>
    <field name="personId" type="string" indexed="true" stored="true" required="false"/>
    <field name="firstname" type="edge_ngram_text" indexed="true" stored="true" required="false" />
    <field name="lastname" type="edge_ngram_text" indexed="true" stored="true" required="false" />
    <field name="name" type="name" indexed="true" stored="true" required="false" termPositions="true" termVectors="true" termOffsets="true" />
    <field name="nickname" type="nickName" indexed="true" stored="true" required="false" termPositions="true" termVectors="true" termOffsets="true" />
    <field name="type" type="string" indexed="true" stored="true" required="false"/>
    <field name="sourceid" type="string" indexed="true" stored="true" required="false"/>
    <field name="partyType" type="string" indexed="true" stored="true" required="false"/>
    <field name="city" type="string" indexed="true" stored="true" required="false"/>
    <field name="state" type="string" indexed="true" stored="true" required="false"/>
    <field name="country" type="string" indexed="true" stored="true" required="false"/>
    <field name="continent" type="string" indexed="true" stored="true" required="false"/>
    <field name="isDNC" type="bool" indexed="true" stored="true" required="false"/>
    <field name="jobFunction" type="string" indexed="true" stored="true" required="false"/>
    <field name="department" type="string" indexed="true" stored="true" required="false"/>
    <field name="relationship_count" type="int" indexed="true" stored="true" required="false"/>
    <field name="isMemberPrograms" type="bool" indexed="true" stored="true" required="false"/>
    <field name="isNew" type="bool" indexed="true" stored="true" required="false"/>
    <field name="isFirstAccess" type="bool" indexed="true" stored="true" required="false"/>
    <field name="isDormant" type="bool" indexed="true" stored="true" required="false"/>
    <field name="isKeyExecutive" type="bool" indexed="true" stored="true" required="false"/>
    <field name="isCouncilPartner" type="bool" indexed="true" stored="true" required="false"/>
    <field name="hasMarketingPermission" type="bool" indexed="true" stored="true" required="false"/>
    <field name="hasClinicalTrials" type="bool" indexed="true" stored="true" required="false"/>
    <field name="isEmployedToPublic" type="bool" indexed="true" stored="false" required="false"/>
    <field name="isEmployedToPrivate" type="bool" indexed="true" stored="false" required="false"/>
    <field name="isEmployedToPrivateSubsidiary" type="bool" indexed="true" stored="false" required="false"/>
    <field name="fortuneRank100" type="bool" indexed="true" stored="false" required="false"/>
    <field name="fortuneRank500" type="bool" indexed="true" stored="false" required="false"/>
    <field name="fortuneRank1000" type="bool" indexed="true" stored="false" required="false"/>
    <field name="isLeader" type="bool" indexed="true" stored="true" required="false"/>
    <field name="isScholar" type="bool" indexed="true" stored="true" required="false"/>
    <field name="isEducator" type="bool" indexed="true" stored="true" required="false"/>
    <field name="isBoardMember" type="bool" indexed="true" stored="true" required="false"/>
    <field name="consultationFeedback" type="string" indexed="true" stored="true" required="false"/>
    <field name="isTermsAndConditionsSigned" type="bool" indexed="true" stored="true" required="false"/>
    <field name="lastSignedTermsAndConditions" type="int" indexed="true" stored="true" required="false"/>
    <field name="biography" type="text" indexed="true" omitNorms="true" stored="true" required="false" termPositions="true" termVectors="true" termOffsets="true" />
    <field name="resume" type="text" indexed="true" omitNorms="true" stored="true" required="false" termPositions="true" termVectors="true" termOffsets="true" />
    <field name="resumeUrl" type="string" indexed="false" stored="true" required="false" />
    <field name="practicearea" type="string" indexed="true" stored="true" required="false"/>
    <field name="zoneregion" type="string" indexed="true" stored="true" required="false"/>
    <field name="boardMembership" type="text" indexed="true" stored="true" required="false" multiValued="false" />
    <field name="hourlyRate" type="int" indexed="true" stored="true" required="false"/>
    <field name="phone" type="text_phone" indexed="true" stored="true" required="false" termPositions="true" termVectors="true" termOffsets="true"/>
    <field name="email" type="email" indexed="true" stored="true" required="false"/>
    <field name="secondaryEmail" type="email" indexed="true" stored="true" required="false"/>
    <field name="recruitedBy" type="int" indexed="true" stored="true" required="false"/>
    <field name="profileQuestions" type="text" multiValued="true" indexed="true" stored="false" required="false" termPositions="true" termVectors="true" termOffsets="true"/>
    <field name="numGivenToClient" type="int" indexed="true" stored="true" required="false"/>
    <field name="numProjectsPaid" type="int" indexed="true" stored="true" required="false"/>
    <field name="projectHistory" type="text" multiValued="true" indexed="true" stored="false" required="false" termPositions="true" termVectors="true" termOffsets="true"/>
    <field name="clinicalTrialSearch" type="text" multiValued="true" indexed="true" stored="true" required="false" termPositions="true" termVectors="true" termOffsets="true"/>
    <field name="clinicalTrialDisplay" type="text" multiValued="true" indexed="false" stored="true" required="false" />
    <field name="flags" type="string" indexed="false" stored="true" required="false" multiValued="false" />
    <field name="specialties" type="facet" multiValued="true"  indexed="true" stored="true"/>
    <field name="languages" type="string" multiValued="true"  indexed="true" stored="true"/>
    <field name="paidToInvitedRatio" type="float" indexed="true" stored="true"/>



    <field name="jobs" type="text" indexed="true" stored="true" required="false" multiValued="false" />
    <field name="jobsCompanyNames" type="text" indexed="true" stored="true" required="false" multiValued="true" />
    <field name="jobsJobTitles" type="text" indexed="true" stored="true" required="false" multiValued="true" />
    <field name="boardCompanyNames" type="text" indexed="true" stored="true" required="false" multiValued="true" />
    <field name="boardJobTitles" type="text" indexed="true" stored="true" required="false" multiValued="true" />
    <field name="jobTaxonomies" type="text" indexed="true" stored="true" required="false" multiValued="true" />

    <dynamicField name="*_Long_Values"  type="tlong" multiValued="true"  indexed="true" stored="false"/>
    <dynamicField name="*_Bucket"  type="text" multiValued="true"  indexed="true" stored="true"/>
    <dynamicField name="*_Facet"  type="facet" multiValued="true"  indexed="true" stored="true"/>

  </fields>

  <copyField source="name" dest="nickname"/>

  <!-- Field to use to determine and enforce document uniqueness.
     Unless this field is marked with required="false", it will be a required field
  -->
  <uniqueKey>id</uniqueKey>

  <!-- field for the QueryParser to use when an explicit fieldname is absent -->
  <defaultSearchField>biography</defaultSearchField>

  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="integer" class="solr.IntField" omitNorms="true"/>

    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>

    <fieldType name="bool" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="long" class="solr.LongField" omitNorms="true"/>

    <fieldType name="float" class="solr.TrieFloatField" omitNorms="true"/>

    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="3" omitNorms="true" positionIncrementGap="0"/>

    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="1"
                catenateNumbers="1"
                catenateAll="0"
                splitOnCaseChange="0"
                splitOnNumerics="0"
                />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_en.txt"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.KeywordRepeatFilterFactory"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>

      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1"
                catenateNumbers="1" catenateAll="0" splitOnCaseChange="0" splitOnNumerics="0" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_en.txt"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.KeywordRepeatFilterFactory"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="facet" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.PatternReplaceFilterFactory" pattern="\s+" replacement=" "  />
      </analyzer>
    </fieldType>


    <fieldType name="email" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="text_phone" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="0"
                generateNumberParts="1"
                catenateWords="0"
                catenateNumbers="1"
                catenateAll="1" />
        <filter class="solr.SynonymFilterFactory" synonyms="phone-synonyms.txt" ignoreCase="true" expand="true"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="0"
                generateNumberParts="0"
                catenateWords="0"
                catenateNumbers="1"
                catenateAll="1" />
        <filter class="solr.SynonymFilterFactory" synonyms="phone-synonyms.txt" ignoreCase="true" expand="true"/>
      </analyzer>
    </fieldType>

    <!-- we don't want to stem names or remove stop words on names -->
    <fieldType name="name" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.ASCIIFoldingFilterFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.ASCIIFoldingFilterFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_en.txt"/>
      </analyzer>
    </fieldType>

    <!-- we don't want to stem names or remove stop words on names -->
    <fieldType name="nickName" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.ASCIIFoldingFilterFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_en.txt"/>
        <filter class="solr.SynonymFilterFactory" synonyms="english_names.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.ASCIIFoldingFilterFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="edge_ngram_text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="200"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>



  </types>

  <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
  <solrQueryParser defaultOperator="OR"/>

</schema>